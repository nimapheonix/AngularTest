{"ast":null,"code":"import { NO_ERRORS_SCHEMA } from \"@angular/core\";\nimport { TestBed } from \"@angular/core/testing\";\nimport { By } from \"@angular/platform-browser\";\nimport { StudentComponent } from \"./student.component\";\ndescribe('StudentComponent (shallow tests)', () => {\n  //\n  let fixture; //\n\n  beforeEach(() => {\n    //\n    TestBed.configureTestingModule({\n      declarations: [StudentComponent],\n      schemas: [NO_ERRORS_SCHEMA]\n    }); //\n\n    fixture = TestBed.createComponent(StudentComponent);\n  }); //\n\n  it('should have the correct student', () => {\n    fixture.componentInstance.student = {\n      id: 1,\n      name: 'Aemon',\n      lastName: 'Targaryen',\n      gpa: 5\n    };\n    expect(fixture.componentInstance.student.name).toEqual('Aemon');\n  }); //\n\n  it('should render the student name in an anchor tag', () => {\n    fixture.componentInstance.student = {\n      id: 1,\n      name: 'Aemon',\n      lastName: 'Targaryen',\n      gpa: 5\n    };\n    fixture.detectChanges(); //\n    //expect(fixture.debugElement.query(By.css('.test-class')));\n    //expect(fixture.debugElement.query(By.css('#test_id')));\n\n    let deA = fixture.debugElement.query(By.css('a'));\n    expect(deA.nativeElement.textContent).toContain('Aemon'); //\n\n    expect(fixture.nativeElement.querySelector('a').textContent).toContain('1 Aemon'); //\n  }); //\n}); // import { ComponentFixture, TestBed } from '@angular/core/testing';\n// import { StudentComponent } from './student.component';\n// describe('StudentComponent', () => {\n//   let component: StudentComponent;\n//   let fixture: ComponentFixture<StudentComponent>;\n//   beforeEach(async () => {\n//     await TestBed.configureTestingModule({\n//       declarations: [ StudentComponent ]\n//     })\n//     .compileComponents();\n//   });\n//   beforeEach(() => {\n//     fixture = TestBed.createComponent(StudentComponent);\n//     component = fixture.componentInstance;\n//     fixture.detectChanges();\n//   });\n//   it('should create', () => {\n//     expect(component).toBeTruthy();\n//   });\n// });","map":{"version":3,"sources":["C:/Users/Nima/Documents/Practice/LeBihan/LeBihanUnitTestSample/LebihanAngularUniTestInPractice/src/app/student/student.component.spec.ts"],"names":["NO_ERRORS_SCHEMA","TestBed","By","StudentComponent","describe","fixture","beforeEach","configureTestingModule","declarations","schemas","createComponent","it","componentInstance","student","id","name","lastName","gpa","expect","toEqual","detectChanges","deA","debugElement","query","css","nativeElement","textContent","toContain","querySelector"],"mappings":"AAAA,SAASA,gBAAT,QAAiC,eAAjC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,EAAT,QAAmB,2BAAnB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACAC,QAAQ,CAAC,kCAAD,EAAqC,MAAM;AAC/C;AACA,MAAIC,OAAJ,CAF+C,CAG/C;;AACAC,EAAAA,UAAU,CAAC,MAAM;AACb;AACAL,IAAAA,OAAO,CAACM,sBAAR,CAA+B;AAC3BC,MAAAA,YAAY,EAAE,CAACL,gBAAD,CADa;AAE3BM,MAAAA,OAAO,EAAE,CAACT,gBAAD;AAFkB,KAA/B,EAFa,CAMb;;AACAK,IAAAA,OAAO,GAAGJ,OAAO,CAACS,eAAR,CAAwBP,gBAAxB,CAAV;AACH,GARS,CAAV,CAJ+C,CAa/C;;AACAQ,EAAAA,EAAE,CAAC,iCAAD,EAAoC,MAAM;AACxCN,IAAAA,OAAO,CAACO,iBAAR,CAA0BC,OAA1B,GAAoC;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,OAAf;AAAwBC,MAAAA,QAAQ,EAAE,WAAlC;AAA+CC,MAAAA,GAAG,EAAE;AAApD,KAApC;AACAC,IAAAA,MAAM,CAACb,OAAO,CAACO,iBAAR,CAA0BC,OAA1B,CAAkCE,IAAnC,CAAN,CAA+CI,OAA/C,CAAuD,OAAvD;AACH,GAHC,CAAF,CAd+C,CAkB/C;;AACAR,EAAAA,EAAE,CAAC,iDAAD,EAAoD,MAAM;AACxDN,IAAAA,OAAO,CAACO,iBAAR,CAA0BC,OAA1B,GAAoC;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,OAAf;AAAwBC,MAAAA,QAAQ,EAAE,WAAlC;AAA+CC,MAAAA,GAAG,EAAE;AAApD,KAApC;AACAZ,IAAAA,OAAO,CAACe,aAAR,GAFwD,CAGxD;AACA;AACA;;AACA,QAAIC,GAAG,GAAGhB,OAAO,CAACiB,YAAR,CAAqBC,KAArB,CAA2BrB,EAAE,CAACsB,GAAH,CAAO,GAAP,CAA3B,CAAV;AACAN,IAAAA,MAAM,CAACG,GAAG,CAACI,aAAJ,CAAkBC,WAAnB,CAAN,CAAsCC,SAAtC,CAAgD,OAAhD,EAPwD,CAQxD;;AACAT,IAAAA,MAAM,CAACb,OAAO,CAACoB,aAAR,CAAsBG,aAAtB,CAAoC,GAApC,EAAyCF,WAA1C,CAAN,CAA6DC,SAA7D,CAAuE,SAAvE,EATwD,CAUxD;AACH,GAXC,CAAF,CAnB+C,CA+B/C;AACH,CAhCO,CAAR,C,CAiCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { NO_ERRORS_SCHEMA } from \"@angular/core\";\r\nimport { TestBed } from \"@angular/core/testing\";\r\nimport { By } from \"@angular/platform-browser\";\r\nimport { StudentComponent } from \"./student.component\";\r\ndescribe('StudentComponent (shallow tests)', () => {\r\n    //\r\n    let fixture;\r\n    //\r\n    beforeEach(() => {\r\n        //\r\n        TestBed.configureTestingModule({\r\n            declarations: [StudentComponent],\r\n            schemas: [NO_ERRORS_SCHEMA]\r\n        });\r\n        //\r\n        fixture = TestBed.createComponent(StudentComponent);\r\n    });\r\n    //\r\n    it('should have the correct student', () => {\r\n        fixture.componentInstance.student = { id: 1, name: 'Aemon', lastName: 'Targaryen', gpa: 5 };\r\n        expect(fixture.componentInstance.student.name).toEqual('Aemon');\r\n    });\r\n    //\r\n    it('should render the student name in an anchor tag', () => {\r\n        fixture.componentInstance.student = { id: 1, name: 'Aemon', lastName: 'Targaryen', gpa: 5 };\r\n        fixture.detectChanges();\r\n        //\r\n        //expect(fixture.debugElement.query(By.css('.test-class')));\r\n        //expect(fixture.debugElement.query(By.css('#test_id')));\r\n        let deA = fixture.debugElement.query(By.css('a'));\r\n        expect(deA.nativeElement.textContent).toContain('Aemon');\r\n        //\r\n        expect(fixture.nativeElement.querySelector('a').textContent).toContain('1 Aemon');\r\n        //\r\n    });\r\n    //\r\n});\r\n// import { ComponentFixture, TestBed } from '@angular/core/testing';\r\n// import { StudentComponent } from './student.component';\r\n// describe('StudentComponent', () => {\r\n//   let component: StudentComponent;\r\n//   let fixture: ComponentFixture<StudentComponent>;\r\n//   beforeEach(async () => {\r\n//     await TestBed.configureTestingModule({\r\n//       declarations: [ StudentComponent ]\r\n//     })\r\n//     .compileComponents();\r\n//   });\r\n//   beforeEach(() => {\r\n//     fixture = TestBed.createComponent(StudentComponent);\r\n//     component = fixture.componentInstance;\r\n//     fixture.detectChanges();\r\n//   });\r\n//   it('should create', () => {\r\n//     expect(component).toBeTruthy();\r\n//   });\r\n// });\r\n"]},"metadata":{},"sourceType":"module"}