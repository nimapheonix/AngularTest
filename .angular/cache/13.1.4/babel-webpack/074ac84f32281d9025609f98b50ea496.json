{"ast":null,"code":"function cov_shywu9kqk() {\n  var path = \"C:\\\\Users\\\\Nima\\\\Documents\\\\Practice\\\\LeBihan\\\\LeBihanUnitTestSample\\\\LebihanAngularUniTestInPractice\\\\src\\\\app\\\\grade\\\\grade.pipe.ts\";\n  var hash = \"cb2ae4409ed93f74aeedfb1b971b03c1bc5106a3\";\n  var global = new Function(\"return this\")();\n  var gcv = \"__coverage__\";\n  var coverageData = {\n    path: \"C:\\\\Users\\\\Nima\\\\Documents\\\\Practice\\\\LeBihan\\\\LeBihanUnitTestSample\\\\LebihanAngularUniTestInPractice\\\\src\\\\app\\\\grade\\\\grade.pipe.ts\",\n    statementMap: {\n      \"0\": {\n        start: {\n          line: 3,\n          column: 16\n        },\n        end: {\n          line: 21,\n          column: 1\n        }\n      },\n      \"1\": {\n        start: {\n          line: 5,\n          column: 8\n        },\n        end: {\n          line: 19,\n          column: 9\n        }\n      },\n      \"2\": {\n        start: {\n          line: 6,\n          column: 12\n        },\n        end: {\n          line: 6,\n          column: 37\n        }\n      },\n      \"3\": {\n        start: {\n          line: 8,\n          column: 13\n        },\n        end: {\n          line: 19,\n          column: 9\n        }\n      },\n      \"4\": {\n        start: {\n          line: 9,\n          column: 12\n        },\n        end: {\n          line: 9,\n          column: 39\n        }\n      },\n      \"5\": {\n        start: {\n          line: 11,\n          column: 13\n        },\n        end: {\n          line: 19,\n          column: 9\n        }\n      },\n      \"6\": {\n        start: {\n          line: 12,\n          column: 12\n        },\n        end: {\n          line: 12,\n          column: 39\n        }\n      },\n      \"7\": {\n        start: {\n          line: 14,\n          column: 13\n        },\n        end: {\n          line: 19,\n          column: 9\n        }\n      },\n      \"8\": {\n        start: {\n          line: 15,\n          column: 12\n        },\n        end: {\n          line: 15,\n          column: 37\n        }\n      },\n      \"9\": {\n        start: {\n          line: 18,\n          column: 12\n        },\n        end: {\n          line: 18,\n          column: 41\n        }\n      },\n      \"10\": {\n        start: {\n          line: 22,\n          column: 0\n        },\n        end: {\n          line: 26,\n          column: 14\n        }\n      }\n    },\n    fnMap: {\n      \"0\": {\n        name: \"(anonymous_0)\",\n        decl: {\n          start: {\n            line: 4,\n            column: 4\n          },\n          end: {\n            line: 4,\n            column: 5\n          }\n        },\n        loc: {\n          start: {\n            line: 4,\n            column: 21\n          },\n          end: {\n            line: 20,\n            column: 5\n          }\n        },\n        line: 4\n      }\n    },\n    branchMap: {\n      \"0\": {\n        loc: {\n          start: {\n            line: 5,\n            column: 8\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 5,\n            column: 8\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 8,\n            column: 13\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        }],\n        line: 5\n      },\n      \"1\": {\n        loc: {\n          start: {\n            line: 8,\n            column: 13\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 8,\n            column: 13\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 11,\n            column: 13\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        }],\n        line: 8\n      },\n      \"2\": {\n        loc: {\n          start: {\n            line: 11,\n            column: 13\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 11,\n            column: 13\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 14,\n            column: 13\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        }],\n        line: 11\n      },\n      \"3\": {\n        loc: {\n          start: {\n            line: 14,\n            column: 13\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        },\n        type: \"if\",\n        locations: [{\n          start: {\n            line: 14,\n            column: 13\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        }, {\n          start: {\n            line: 17,\n            column: 13\n          },\n          end: {\n            line: 19,\n            column: 9\n          }\n        }],\n        line: 14\n      }\n    },\n    s: {\n      \"0\": 0,\n      \"1\": 0,\n      \"2\": 0,\n      \"3\": 0,\n      \"4\": 0,\n      \"5\": 0,\n      \"6\": 0,\n      \"7\": 0,\n      \"8\": 0,\n      \"9\": 0,\n      \"10\": 0\n    },\n    f: {\n      \"0\": 0\n    },\n    b: {\n      \"0\": [0, 0],\n      \"1\": [0, 0],\n      \"2\": [0, 0],\n      \"3\": [0, 0]\n    },\n    inputSourceMap: {\n      version: 3,\n      file: \"grade.pipe.js\",\n      sourceRoot: \"\",\n      sources: [\"C:\\\\Users\\\\Nima\\\\Documents\\\\Practice\\\\LeBihan\\\\LeBihanUnitTestSample\\\\LebihanAngularUniTestInPractice\\\\src\\\\app\\\\grade\\\\grade.pipe.ts\"],\n      names: [],\n      mappings: \";AAAA,OAAO,EAAE,IAAI,EAAiB,MAAM,eAAe,CAAC;IAKvC,SAAS,SAAT,SAAS;IAEpB,SAAS,CAAC,KAAa;QACrB,IAAI,KAAK,IAAI,CAAC,EAAE;YACd,OAAO,KAAK,GAAG,SAAS,CAAC;SAC1B;aACI,IAAI,KAAK,IAAI,CAAC,EAAE;YACnB,OAAO,KAAK,GAAG,WAAW,CAAC;SAC5B;aACI,IAAI,KAAK,IAAI,CAAC,EAAE;YACnB,OAAO,KAAK,GAAG,WAAW,CAAC;SAC5B;aACI,IAAI,KAAK,IAAI,CAAC,EAAE;YACnB,OAAO,KAAK,GAAG,SAAS,CAAC;SAC1B;aACI;YACH,OAAO,KAAK,GAAG,aAAa,CAAC;SAC9B;IACH,CAAC;CAEF,CAAA;AApBY,SAAS;IAHrB,IAAI,CAAC;QACJ,IAAI,EAAE,OAAO;KACd,CAAC;GACW,SAAS,CAoBrB;SApBY,SAAS\",\n      sourcesContent: [\"import { Pipe, PipeTransform } from '@angular/core';\\n\\n@Pipe({\\n  name: 'grade'\\n})\\nexport class GradePipe implements PipeTransform {\\n\\n  transform(value: number): string {\\n    if (value <= 1) {\\n      return value + \\\" (weak)\\\";\\n    }\\n    else if (value == 2) {\\n      return value + \\\" (medium)\\\";\\n    }\\n    else if (value == 3) {\\n      return value + \\\" (strong)\\\";\\n    }\\n    else if (value == 4) {\\n      return value + \\\" (good)\\\";\\n    }\\n    else {\\n      return value + \\\" (excelent)\\\";\\n    }\\n  }\\n\\n}\\n\"]\n    },\n    _coverageSchema: \"1a1c01bbd47fc00a2c39e90264f33305004495a9\",\n    hash: \"cb2ae4409ed93f74aeedfb1b971b03c1bc5106a3\"\n  };\n  var coverage = global[gcv] || (global[gcv] = {});\n\n  if (!coverage[path] || coverage[path].hash !== hash) {\n    coverage[path] = coverageData;\n  }\n\n  var actualCoverage = coverage[path];\n  {\n    // @ts-ignore\n    cov_shywu9kqk = function () {\n      return actualCoverage;\n    };\n  }\n  return actualCoverage;\n}\n\ncov_shywu9kqk();\nimport { __decorate } from \"tslib\";\nimport { Pipe } from '@angular/core';\ncov_shywu9kqk().s[0]++;\nlet GradePipe = class GradePipe {\n  transform(value) {\n    cov_shywu9kqk().f[0]++;\n    cov_shywu9kqk().s[1]++;\n\n    if (value <= 1) {\n      cov_shywu9kqk().b[0][0]++;\n      cov_shywu9kqk().s[2]++;\n      return value + \" (weak)\";\n    } else {\n      cov_shywu9kqk().b[0][1]++;\n      cov_shywu9kqk().s[3]++;\n\n      if (value == 2) {\n        cov_shywu9kqk().b[1][0]++;\n        cov_shywu9kqk().s[4]++;\n        return value + \" (medium)\";\n      } else {\n        cov_shywu9kqk().b[1][1]++;\n        cov_shywu9kqk().s[5]++;\n\n        if (value == 3) {\n          cov_shywu9kqk().b[2][0]++;\n          cov_shywu9kqk().s[6]++;\n          return value + \" (strong)\";\n        } else {\n          cov_shywu9kqk().b[2][1]++;\n          cov_shywu9kqk().s[7]++;\n\n          if (value == 4) {\n            cov_shywu9kqk().b[3][0]++;\n            cov_shywu9kqk().s[8]++;\n            return value + \" (good)\";\n          } else {\n            cov_shywu9kqk().b[3][1]++;\n            cov_shywu9kqk().s[9]++;\n            return value + \" (excelent)\";\n          }\n        }\n      }\n    }\n  }\n\n};\ncov_shywu9kqk().s[10]++;\nGradePipe = __decorate([Pipe({\n  name: 'grade'\n})], GradePipe);\nexport { GradePipe };","map":{"version":3,"sources":["C:/Users/Nima/Documents/Practice/LeBihan/LeBihanUnitTestSample/LebihanAngularUniTestInPractice/src/app/grade/grade.pipe.ts"],"names":["__decorate","Pipe","GradePipe","transform","value","name"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeY;;;;;;;;;AAfZ,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,IAAT,QAAqB,eAArB;;AACA,IAAIC,SAAS,GAAG,MAAMA,SAAN,CAAgB;AAC5BC,EAAAA,SAAS,CAACC,KAAD,EAAQ;AAAA;AAAA;;AACb,QAAIA,KAAK,IAAI,CAAb,EAAgB;AAAA;AAAA;AACZ,aAAOA,KAAK,GAAG,SAAf;AACH,KAFD,MAGK;AAAA;AAAA;;AAAA,UAAIA,KAAK,IAAI,CAAb,EAAgB;AAAA;AAAA;AACjB,eAAOA,KAAK,GAAG,WAAf;AACH,OAFI,MAGA;AAAA;AAAA;;AAAA,YAAIA,KAAK,IAAI,CAAb,EAAgB;AAAA;AAAA;AACjB,iBAAOA,KAAK,GAAG,WAAf;AACH,SAFI,MAGA;AAAA;AAAA;;AAAA,cAAIA,KAAK,IAAI,CAAb,EAAgB;AAAA;AAAA;AACjB,mBAAOA,KAAK,GAAG,SAAf;AACH,WAFI,MAGA;AAAA;AAAA;AACD,mBAAOA,KAAK,GAAG,aAAf;AACH;AAAA;AAAA;AAAA;AACJ;;AAjB2B,CAAhC;;AAmBAF,SAAS,GAAGF,UAAU,CAAC,CACnBC,IAAI,CAAC;AACDI,EAAAA,IAAI,EAAE;AADL,CAAD,CADe,CAAD,EAInBH,SAJmB,CAAtB;AAKA,SAASA,SAAT","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Pipe } from '@angular/core';\r\nlet GradePipe = class GradePipe {\r\n    transform(value) {\r\n        if (value <= 1) {\r\n            return value + \" (weak)\";\r\n        }\r\n        else if (value == 2) {\r\n            return value + \" (medium)\";\r\n        }\r\n        else if (value == 3) {\r\n            return value + \" (strong)\";\r\n        }\r\n        else if (value == 4) {\r\n            return value + \" (good)\";\r\n        }\r\n        else {\r\n            return value + \" (excelent)\";\r\n        }\r\n    }\r\n};\r\nGradePipe = __decorate([\r\n    Pipe({\r\n        name: 'grade'\r\n    })\r\n], GradePipe);\r\nexport { GradePipe };\r\n"]},"metadata":{},"sourceType":"module"}