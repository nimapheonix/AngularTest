{"ast":null,"code":"import { fakeAsync, flush, TestBed } from \"@angular/core/testing\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { StudentService } from \"../services/student.service\";\nimport { StudentDetailComponent } from \"./student-detail.component\";\nimport { Location } from '@angular/common';\nimport { of } from \"rxjs\";\nimport { FormsModule } from \"@angular/forms\";\ndescribe('StudentDetailComponent', () => {\n  //\n  let fixture;\n  let mockActivatedRoute, mockStudentService, mockLocation; //\n\n  beforeEach(() => {\n    //\n    mockStudentService = jasmine.createSpyObj(['getStudent', 'updateStudent']);\n    mockLocation = jasmine.createSpyObj(['back']);\n    mockActivatedRoute = {\n      snapshot: {\n        paramMap: {\n          get: () => {\n            return '3';\n          }\n        }\n      }\n    }; //\n\n    TestBed.configureTestingModule({\n      imports: [FormsModule],\n      declarations: [StudentDetailComponent],\n      providers: [{\n        provide: ActivatedRoute,\n        useValue: mockActivatedRoute\n      }, {\n        provide: StudentService,\n        useValue: mockStudentService\n      }, {\n        provide: Location,\n        useValue: mockLocation\n      }]\n    }); //\n\n    fixture = TestBed.createComponent(StudentDetailComponent); //\n\n    mockStudentService.getStudent.and.returnValue(of({\n      id: 3,\n      name: 'Benjin',\n      lastName: 'Stark',\n      gpa: 5\n    })); //\n  }); //\n\n  it('should render student name in a legend tag', () => {\n    //\n    fixture.detectChanges(); //\n\n    expect(fixture.nativeElement.querySelector('legend').textContent).toContain('BENJIN'); //\n  }); //\n\n  it('should call updateStudent when save is called ', fakeAsync(() => {\n    //\n    mockStudentService.updateStudent.and.returnValue(of({}));\n    fixture.detectChanges(); //\n\n    fixture.componentInstance.save(); //\n    //tick(250);\n    // or call flush\n\n    flush(); //\n\n    expect(mockStudentService.updateStudent).toHaveBeenCalled(); //\n  })); //\n  // it('should call updateStudent when saveAsync is called with timeout', (done) => {\n  //     //\n  //     mockStudentService.updateStudent.and.returnValue(of({}));\n  //     fixture.detectChanges();\n  //     //\n  //     fixture.componentInstance.saveAsync();\n  //     //\n  //     setTimeout(() => {\n  //         expect(mockStudentService.updateStudent).toHaveBeenCalled();\n  //         done();\n  //     }, 300);\n  //     //\n  // });\n  // // //\n  // it('should call updateStudent when saveAsync is called with promise', async(() => {\n  //     //\n  //     mockStudentService.updateStudent.and.returnValue(of({}));\n  //     fixture.detectChanges();\n  //     //\n  //     fixture.componentInstance.savePromise();\n  //     //\n  //     fixture.whenStable().then(() => {\n  //         expect(mockStudentService.updateStudent).toHaveBeenCalled();\n  //     });\n  //     //\n  // }));\n  //\n}); // import { ComponentFixture, TestBed } from '@angular/core/testing';\n// import { StudentDetailComponent } from './student-detail.component';\n// describe('StudentDetailComponent', () => {\n//   let component: StudentDetailComponent;\n//   let fixture: ComponentFixture<StudentDetailComponent>;\n//   beforeEach(async () => {\n//     await TestBed.configureTestingModule({\n//       declarations: [ StudentDetailComponent ]\n//     })\n//     .compileComponents();\n//   });\n//   beforeEach(() => {\n//     fixture = TestBed.createComponent(StudentDetailComponent);\n//     component = fixture.componentInstance;\n//     fixture.detectChanges();\n//   });\n//   it('should create', () => {\n//     expect(component).toBeTruthy();\n//   });\n// });","map":{"version":3,"sources":["C:/Users/Nima/Documents/Practice/LeBihan/LeBihanUnitTestSample/LebihanAngularUniTestInPractice/src/app/student-detail/student-detail.component.spec.ts"],"names":["fakeAsync","flush","TestBed","ActivatedRoute","StudentService","StudentDetailComponent","Location","of","FormsModule","describe","fixture","mockActivatedRoute","mockStudentService","mockLocation","beforeEach","jasmine","createSpyObj","snapshot","paramMap","get","configureTestingModule","imports","declarations","providers","provide","useValue","createComponent","getStudent","and","returnValue","id","name","lastName","gpa","it","detectChanges","expect","nativeElement","querySelector","textContent","toContain","updateStudent","componentInstance","save","toHaveBeenCalled"],"mappings":"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","sourcesContent":["import { fakeAsync, flush, TestBed } from \"@angular/core/testing\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { StudentService } from \"../services/student.service\";\r\nimport { StudentDetailComponent } from \"./student-detail.component\";\r\nimport { Location } from '@angular/common';\r\nimport { of } from \"rxjs\";\r\nimport { FormsModule } from \"@angular/forms\";\r\ndescribe('StudentDetailComponent', () => {\r\n    //\r\n    let fixture;\r\n    let mockActivatedRoute, mockStudentService, mockLocation;\r\n    //\r\n    beforeEach(() => {\r\n        //\r\n        mockStudentService = jasmine.createSpyObj(['getStudent', 'updateStudent']);\r\n        mockLocation = jasmine.createSpyObj(['back']);\r\n        mockActivatedRoute = {\r\n            snapshot: { paramMap: { get: () => { return '3'; } } }\r\n        };\r\n        //\r\n        TestBed.configureTestingModule({\r\n            imports: [FormsModule],\r\n            declarations: [StudentDetailComponent],\r\n            providers: [\r\n                { provide: ActivatedRoute, useValue: mockActivatedRoute },\r\n                { provide: StudentService, useValue: mockStudentService },\r\n                { provide: Location, useValue: mockLocation },\r\n            ]\r\n        });\r\n        //\r\n        fixture = TestBed.createComponent(StudentDetailComponent);\r\n        //\r\n        mockStudentService.getStudent.and.returnValue(of({ id: 3, name: 'Benjin', lastName: 'Stark', gpa: 5 }));\r\n        //\r\n    });\r\n    //\r\n    it('should render student name in a legend tag', () => {\r\n        //\r\n        fixture.detectChanges();\r\n        //\r\n        expect(fixture.nativeElement.querySelector('legend').textContent).toContain('BENJIN');\r\n        //\r\n    });\r\n    //\r\n    it('should call updateStudent when save is called ', fakeAsync(() => {\r\n        //\r\n        mockStudentService.updateStudent.and.returnValue(of({}));\r\n        fixture.detectChanges();\r\n        //\r\n        fixture.componentInstance.save();\r\n        //\r\n        //tick(250);\r\n        // or call flush\r\n        flush();\r\n        //\r\n        expect(mockStudentService.updateStudent).toHaveBeenCalled();\r\n        //\r\n    }));\r\n    //\r\n    // it('should call updateStudent when saveAsync is called with timeout', (done) => {\r\n    //     //\r\n    //     mockStudentService.updateStudent.and.returnValue(of({}));\r\n    //     fixture.detectChanges();\r\n    //     //\r\n    //     fixture.componentInstance.saveAsync();\r\n    //     //\r\n    //     setTimeout(() => {\r\n    //         expect(mockStudentService.updateStudent).toHaveBeenCalled();\r\n    //         done();\r\n    //     }, 300);\r\n    //     //\r\n    // });\r\n    // // //\r\n    // it('should call updateStudent when saveAsync is called with promise', async(() => {\r\n    //     //\r\n    //     mockStudentService.updateStudent.and.returnValue(of({}));\r\n    //     fixture.detectChanges();\r\n    //     //\r\n    //     fixture.componentInstance.savePromise();\r\n    //     //\r\n    //     fixture.whenStable().then(() => {\r\n    //         expect(mockStudentService.updateStudent).toHaveBeenCalled();\r\n    //     });\r\n    //     //\r\n    // }));\r\n    //\r\n});\r\n// import { ComponentFixture, TestBed } from '@angular/core/testing';\r\n// import { StudentDetailComponent } from './student-detail.component';\r\n// describe('StudentDetailComponent', () => {\r\n//   let component: StudentDetailComponent;\r\n//   let fixture: ComponentFixture<StudentDetailComponent>;\r\n//   beforeEach(async () => {\r\n//     await TestBed.configureTestingModule({\r\n//       declarations: [ StudentDetailComponent ]\r\n//     })\r\n//     .compileComponents();\r\n//   });\r\n//   beforeEach(() => {\r\n//     fixture = TestBed.createComponent(StudentDetailComponent);\r\n//     component = fixture.componentInstance;\r\n//     fixture.detectChanges();\r\n//   });\r\n//   it('should create', () => {\r\n//     expect(component).toBeTruthy();\r\n//   });\r\n// });\r\n"]},"metadata":{},"sourceType":"module"}